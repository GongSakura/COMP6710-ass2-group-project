# IMPORTANT: It is very important that you correctly complete this originality
# statement.
#
# This is your statement of your submitted work being your own.
# Incorrectly filling out this statement could lead to charges
# of academic misconduct.
# 
# For information on how to fill this out correctly, see
# https://cs.anu.edu.au/courses/comp1110/help/faq/09-originality/
#

declaration: >-
  I submit the work below for assessment as my best work. I declare that this
  is entirely my own work, with the following documented exceptions:

# Use this to list names of people who you collaborated with, and a
# comment about what you collaborated on.
#
# Add as many "name+comment" entries as necessary
# (or remove it altogether if you haven't collaborated with anyone)


# Use this to list any code that you used that you did not write,
# aside from code provided by the lecturer.  Provide a comment
# explaining your use and the URL to that code and the licence for
# that code
#
# Add as many "url+licence+comment" entries as necessary
# (or remove it altogether if you haven't used any external code)


# I wish to submit the following classes as entirely my own (remove this if
# you want to just submit methods):
class:
  - PlayInfo (inner class in Board)
  - Levels  (inner class in Board)
  - SelectionButton (inner class in Board)
  - FunctionButton (inner class in Board)
  - timer_loadGame (anonymous class in Board)
  - timer_cost (anonymous class in Board)

# I wish to submit the following methods as entirely my own (remove this if
# you want to just submit classes):
method:
   - initialize         // initialize the board
   - dropPiece          // to drop the piece in the board
   - dragPiece          // to drag the piece out the board
   - getSolution()      // for task9
   - search()           // the recusion method for task9
   - generateGames()    // for task11
   - search2()          // the recusion method for task11
   - sortString()       // to sort
   - readPlayers()      // save&load feature
   - savePlayers        // save&load feature
   - saveArchives       // save&load feature
   - readArchives()     // save&load feature
   - tidyPieces()       // an interesting feature
   - setTopBar()        // to stylise the top bar of the GUI
   - loadWaitingPage()  // a loading aniamtion
   - loadSelectPage()   // a selection page
   - LoadPlayerPage()   // for loading the saved players
   - loadCreatePage()   // a page for creating a new player
   - askUnlock()        // for asking player whether to unlock an unknown challenge
   - settingsButton()   // to create a well-functional setting button

# sign *your* name and uid here
name: Yuxuan Yang
uid: u7078049
